import os
import torch

# --- Core Training Parameters ---
RANDOM_SEED = 42
LEARNING_RATE = 5e-5
NUM_EPOCHS = 3
BATCH_SIZE = 8  # Adjust based on your GPU memory
MAX_SEQ_LEN = 256  # Maximum sequence length for encoder and decoder

# --- Dataset Configuration ---
# Percentage of the dataset to use for training and evaluation.
# Set to less than 1.0 for faster testing runs.
DATA_SAMPLE_PERCENTAGE = 1.0
EVAL_SAMPLE_PERCENTAGE = 1.0

# --- Model Architecture ---
# These dimensions define your model's size.
# For a model from scratch:
HIDDEN_DIM = 768  # The main dimension of the model (embedding size, hidden states)
ENCODER_LAYERS = 6  # Number of layers in the Transformer encoder
DECODER_LAYERS = 6  # Number of layers in the Transformer decoder
NUM_ATTENTION_HEADS = 12  # Number of attention heads (must divide HIDDEN_DIM)
INTERMEDIATE_SIZE = 3072  # Dimension of the feed-forward layer (usually 4 * HIDDEN_DIM)
DROPOUT = 0.1  # Dropout rate

# --- Numeric Feature Configuration ---
# This must match the number of features generated by _number_embedding_features in hugging_tokenizer2.py
DETERMINED_NUMERIC_FEATURE_DIM = 7 

# --- Special Token Names ---
# These names are used to retrieve token IDs from the tokenizer.
NUM_TOKEN = "[NUM]"

# --- File Paths ---
PROJECT_ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..'))

# Path where the tokenizer will be loaded from or saved to
TOKENIZER_PATH = os.path.join(PROJECT_ROOT, "blackhole_tokenizer_demo")
# Path where the trained model and logs will be saved
OUTPUT_DIR = os.path.join(PROJECT_ROOT, "training_output")
LOG_DIR = os.path.join(OUTPUT_DIR, "logs") # This variable isn't directly used in train_model.py, but good to have

VOCAB_SIZE = 30000

# --- Additional Model Configuration Parameters (for BlackholeConfig) ---
TYPE_VOCAB_SIZE = 2             # Typically 2 for sentence pair tasks (token_type_ids)
LAYER_NORM_EPS = 1e-12          # Epsilon for layer normalization, a small value to prevent division by zero

# Ensure these match the DIMS variable used for BlackholeConfig
NUMERIC_FEATURE_DIMS = DETERMINED_NUMERIC_FEATURE_DIM 
NUMERIC_EMBEDDING_FUSION_TYPE = "add" # Options: "add", "concat", "mlp" - depends on model implementation
NUMERIC_PROJECTION_INTERMEDIATE_SIZE_RATIO = 2 # Ratio for intermediate projection size in numeric features
NUMERIC_HEAVY_FEATURE_FREEZE = False # Set to True to freeze numeric-heavy features during fine-tuning


# --- Device Configuration ---
DEVICE = "cuda" if torch.cuda.is_available() else "cpu"